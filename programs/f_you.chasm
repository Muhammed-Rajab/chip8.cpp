call start

start:
  jp loop

nextchar:
  add V0, 0x08
  ret

loadf:
  ld I, ff
  drw V0, V1, 5
  call nextchar
  ret

loadu:
  ld I, uu
  drw V0, V1, 5
  call nextchar
  ret

loadc:
  ld I, cc
  drw V0, V1, 5
  call nextchar
  ret

loadk:
  ld I, kk
  drw V0, V1, 5
  call nextchar
  ret

loady:
  ld I, yy
  drw V0, V1, 5
  call nextchar
  ret

loado:
  ld I, oo
  drw V0, V1, 5
  call nextchar
  ret

load!!:
  ld I, !!
  drw V0, V1, 5
  call nextchar
  ret

loop:
  cls
  ld V0, 0x4
  ld V1, 0xd
  call loadf
  call loadu
  call loadc
  call loadk
  call loady
  call loado
  call loadu
  call load!!
  jp loop

ff: .byte 0xf0, 0x80, 0xf0, 0x80, 0x80
uu: .byte 0x88, 0x88, 0x88, 0x88, 0xf8
cc: .byte 0xf0, 0x80, 0x80, 0x80, 0xf0
kk: .byte 0x90, 0xa0, 0xc0, 0xa0, 0x90
yy: .byte 0x90, 0x90, 0xf0, 0x60, 0x60
oo: .byte 0xf0, 0x90, 0x90, 0x90, 0xf0
!!: .byte 0xc0, 0xc0, 0xc0, 0x00, 0xc0
